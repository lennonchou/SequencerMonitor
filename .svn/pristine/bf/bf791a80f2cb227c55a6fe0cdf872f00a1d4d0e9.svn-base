var log = require('./log.js');
var settings = require('./settings');
var Q = require('q');
var mysql = require('mysql');
var pool = mysql.createPool(settings.mysqlPool);
exports.myQuery = function myQuery(sql, params) {

  var deferred = Q.defer();
  pool.getConnection(function(err, connection) {

    if (err) {
      log.d('Error in connection with database');
      err.message = 'Failed to make connection';
      deferred.reject(new Error(err));
      return;
    }
    log.d('Connection success');
    var query = mysql.format(sql, params);
    log.d('Query = ' + query);
    connection.query(query, function(err, rows) {
      //release the connection regardless
      connection.release();
      if (!err) {
        //if no error, put result into promise
        deferred.resolve(rows);
      } else {
        //if error, put error into promise
        log.d('Error in query');
        // err.message = 'Query error';
        deferred.reject(new Error(err));
      }
    });
    connection.removeAllListeners('error');
    //error handler for connection
    connection.on('error', function(err) {
      log.d('Connection error');
      try {
        connection.release();
      } catch (e) {
        log.d('Connection release error');
      }
      err.message = 'Connection internal error';
      deferred.reject(new Error(err));
      return;
    });
  });

  return deferred.promise;
};
